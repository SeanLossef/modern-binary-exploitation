# Encrypted password obtained using "x /x 0x601090"
def ci(i):
    x = [0x55,0x70,0xa1,0xa2,0x26,0x63,0xbc,0xba,0x3d,0x53,0xbf,0xb9,0x3b,0x6b,0xf4,0xf5,0x1a,0x76,0xf0,0xf2,0x34,0x73]
    return x[21-i]

# Encrypt single character
def enc(i, p):
    d = i         #4008a7:  mov     edx, dword [rbp-0x4]
    a = 0         #4008aa:  mov     rax, qword [rbp-0x18]
    d += a        #4008ae:  add     rdx, rax
    c = i         #4008b1:  mov     ecx, dword [rbp-0x4]
    a = 0         #4008b4:  mov     rax, qword [rbp-0x18]
    a += c        #4008b8:  add     rax, rcx
    a = p         #4008bb:  movzx   eax, byte [rax]
    si = a        #4008be:  mov     esi, eax
    a = i         #4008c0:  mov     eax, dword [rbp-0x4]
    c = a         #4008c3:  mov     ecx, eax
    a = c         #4008c5:  mov     eax, ecx
    a = a << 6    #4008c7:  shl     eax, 0x6
    a += c        #4008ca:  add     eax, ecx
    a = a ^ si    #4008cc:  xor     eax, esi
    a = a & 0xff  #4008ce:  mov     byte [rdx], al
    return a

# Brute force password
for i in range(22):
    for p in range(256):
        if enc(i, p) == ci(i):
            print(chr(p), end="")